// Load webview.
var objweb = ArticleHTMLWebView(frame: CGRectMake(0, 0, 320, 560))
 
 objweb.delegate = self
 
 var path = NSBundle.mainBundle().bundlePath
 var baseUrl  = NSURL.fileURLWithPath("\(path)")
 
 self.view.addSubview(objweb)
 
 
 var query = PFQuery(className:"HTMLTest")
 query.getObjectInBackgroundWithId("Ciu0YsqTfe") { (html: PFObject!, error: NSError!) -> Void in
 if error == nil {
 var htmlPFFile = html.objectForKey("file") as PFFile
 NSLog("%@", htmlPFFile.name)
 
 htmlPFFile.getDataInBackgroundWithBlock({ (htmlData: NSData!, error: NSError!) -> Void in
 
 var testData = NSMutableData()
 testData.appendData(htmlData)
 testData.appendData(htmlData)
 
 var content = NSString(data: testData, encoding: NSUTF8StringEncoding)
 
 objweb.loadHTMLString(content, baseURL: baseUrl)
 
 })
 
 } else {
 NSLog("%@", error)
 }
 }


// Create URL from HTML file in application bundle


NSURL *html = [[NSBundle mainBundle] URLForResource: @"text" withExtension:@"html"];

// Create attributed string from HTML
NSAttributedString *attrStr = [[NSAttributedString alloc]
                               initWithFileURL:html
                               options:@{NSDocumentTypeDocumentAttribute:NSHTMLTextDocumentType}
                               documentAttributes:nil error:nil];

// Create textview, add attributed str
// UITextView *textView = [[UITextView alloc] initWithFrame:CGRectMake(10, 10, 320, 50)];
// [textView setAttributedText:attrStr];

[self.title setAttributedText:attrStr];



// Show textview
// [self addSubview:textView];

// The view is still inside the screen.
/*************************************/
// velocity works bad.

 var velocity = recognizer.velocityInView(self.superview!)
 if (velocity.y>200){
 finalCenter = CGPointMake(lastX!, (DeviceManager.sharedInstance.screenHeight-assistantHeight*0.5))
 isVelocityDominate = true
 }
 else if (velocity.y<(-200)){
 finalCenter = CGPointMake(lastX!, assistantHeight*0.5)
 isVelocityDominate = true
 }

